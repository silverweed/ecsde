use super::Key;
use crate::gfx::window::Event;
use glfw::Action;

pub(super) type Framework_Key = glfw::Key;

// @WaitForStable: make this const
pub(super) fn framework_to_engine_key(key: Framework_Key) -> Option<Key> {
    match key {
        Framework_Key::A => Some(Key::A),
        Framework_Key::B => Some(Key::B),
        Framework_Key::C => Some(Key::C),
        Framework_Key::D => Some(Key::D),
        Framework_Key::E => Some(Key::E),
        Framework_Key::F => Some(Key::F),
        Framework_Key::G => Some(Key::G),
        Framework_Key::H => Some(Key::H),
        Framework_Key::I => Some(Key::I),
        Framework_Key::J => Some(Key::J),
        Framework_Key::K => Some(Key::K),
        Framework_Key::L => Some(Key::L),
        Framework_Key::M => Some(Key::M),
        Framework_Key::N => Some(Key::N),
        Framework_Key::O => Some(Key::O),
        Framework_Key::P => Some(Key::P),
        Framework_Key::Q => Some(Key::Q),
        Framework_Key::R => Some(Key::R),
        Framework_Key::S => Some(Key::S),
        Framework_Key::T => Some(Key::T),
        Framework_Key::U => Some(Key::U),
        Framework_Key::V => Some(Key::V),
        Framework_Key::W => Some(Key::W),
        Framework_Key::X => Some(Key::X),
        Framework_Key::Y => Some(Key::Y),
        Framework_Key::Z => Some(Key::Z),
        Framework_Key::Num0 => Some(Key::Num0),
        Framework_Key::Num1 => Some(Key::Num1),
        Framework_Key::Num2 => Some(Key::Num2),
        Framework_Key::Num3 => Some(Key::Num3),
        Framework_Key::Num4 => Some(Key::Num4),
        Framework_Key::Num5 => Some(Key::Num5),
        Framework_Key::Num6 => Some(Key::Num6),
        Framework_Key::Num7 => Some(Key::Num7),
        Framework_Key::Num8 => Some(Key::Num8),
        Framework_Key::Num9 => Some(Key::Num9),
        Framework_Key::Escape => Some(Key::Escape),
        Framework_Key::LeftControl => Some(Key::LControl),
        Framework_Key::LeftShift => Some(Key::LShift),
        Framework_Key::LeftAlt => Some(Key::LAlt),
        Framework_Key::LeftSuper => Some(Key::LSystem),
        Framework_Key::RightControl => Some(Key::RControl),
        Framework_Key::RightShift => Some(Key::RShift),
        Framework_Key::RightAlt => Some(Key::RAlt),
        Framework_Key::RightSuper => Some(Key::RSystem),
        Framework_Key::Menu => Some(Key::Menu),
        Framework_Key::LeftBracket => Some(Key::LBracket),
        Framework_Key::RightBracket => Some(Key::RBracket),
        Framework_Key::Semicolon => Some(Key::SemiColon),
        Framework_Key::Comma => Some(Key::Comma),
        Framework_Key::Period => Some(Key::Period),
        Framework_Key::Apostrophe => Some(Key::Quote),
        Framework_Key::Slash => Some(Key::Slash),
        Framework_Key::Backslash => Some(Key::BackSlash),
        Framework_Key::GraveAccent => Some(Key::Tilde),
        Framework_Key::Equal => Some(Key::Equal),
        Framework_Key::Minus => Some(Key::Dash),
        Framework_Key::Space => Some(Key::Space),
        Framework_Key::Enter => Some(Key::Return),
        Framework_Key::Backspace => Some(Key::BackSpace),
        Framework_Key::Tab => Some(Key::Tab),
        Framework_Key::PageUp => Some(Key::PageUp),
        Framework_Key::PageDown => Some(Key::PageDown),
        Framework_Key::End => Some(Key::End),
        Framework_Key::Home => Some(Key::Home),
        Framework_Key::Insert => Some(Key::Insert),
        Framework_Key::Delete => Some(Key::Delete),
        Framework_Key::KpAdd => Some(Key::Add),
        Framework_Key::KpSubtract => Some(Key::Subtract),
        Framework_Key::KpMultiply => Some(Key::Multiply),
        Framework_Key::KpDivide => Some(Key::Divide),
        Framework_Key::Left => Some(Key::Left),
        Framework_Key::Right => Some(Key::Right),
        Framework_Key::Up => Some(Key::Up),
        Framework_Key::Down => Some(Key::Down),
        Framework_Key::Kp0 => Some(Key::Numpad0),
        Framework_Key::Kp1 => Some(Key::Numpad1),
        Framework_Key::Kp2 => Some(Key::Numpad2),
        Framework_Key::Kp3 => Some(Key::Numpad3),
        Framework_Key::Kp4 => Some(Key::Numpad4),
        Framework_Key::Kp5 => Some(Key::Numpad5),
        Framework_Key::Kp6 => Some(Key::Numpad6),
        Framework_Key::Kp7 => Some(Key::Numpad7),
        Framework_Key::Kp8 => Some(Key::Numpad8),
        Framework_Key::Kp9 => Some(Key::Numpad9),
        Framework_Key::F1 => Some(Key::F1),
        Framework_Key::F2 => Some(Key::F2),
        Framework_Key::F3 => Some(Key::F3),
        Framework_Key::F4 => Some(Key::F4),
        Framework_Key::F5 => Some(Key::F5),
        Framework_Key::F6 => Some(Key::F6),
        Framework_Key::F7 => Some(Key::F7),
        Framework_Key::F8 => Some(Key::F8),
        Framework_Key::F9 => Some(Key::F9),
        Framework_Key::F10 => Some(Key::F10),
        Framework_Key::F11 => Some(Key::F11),
        Framework_Key::F12 => Some(Key::F12),
        Framework_Key::F13 => Some(Key::F13),
        Framework_Key::F14 => Some(Key::F14),
        Framework_Key::F15 => Some(Key::F15),
        Framework_Key::Pause => Some(Key::Pause),
        _ => None,
    }
}

// @WaitForStable: make this const
fn engine_to_framework_key(key: Key) -> Framework_Key {
    match key {
        Key::A => Framework_Key::A,
        Key::B => Framework_Key::B,
        Key::C => Framework_Key::C,
        Key::D => Framework_Key::D,
        Key::E => Framework_Key::E,
        Key::F => Framework_Key::F,
        Key::G => Framework_Key::G,
        Key::H => Framework_Key::H,
        Key::I => Framework_Key::I,
        Key::J => Framework_Key::J,
        Key::K => Framework_Key::K,
        Key::L => Framework_Key::L,
        Key::M => Framework_Key::M,
        Key::N => Framework_Key::N,
        Key::O => Framework_Key::O,
        Key::P => Framework_Key::P,
        Key::Q => Framework_Key::Q,
        Key::R => Framework_Key::R,
        Key::S => Framework_Key::S,
        Key::T => Framework_Key::T,
        Key::U => Framework_Key::U,
        Key::V => Framework_Key::V,
        Key::W => Framework_Key::W,
        Key::X => Framework_Key::X,
        Key::Y => Framework_Key::Y,
        Key::Z => Framework_Key::Z,
        Key::Num0 => Framework_Key::Num0,
        Key::Num1 => Framework_Key::Num1,
        Key::Num2 => Framework_Key::Num2,
        Key::Num3 => Framework_Key::Num3,
        Key::Num4 => Framework_Key::Num4,
        Key::Num5 => Framework_Key::Num5,
        Key::Num6 => Framework_Key::Num6,
        Key::Num7 => Framework_Key::Num7,
        Key::Num8 => Framework_Key::Num8,
        Key::Num9 => Framework_Key::Num9,
        Key::Escape => Framework_Key::Escape,
        Key::LControl => Framework_Key::LeftControl,
        Key::LShift => Framework_Key::LeftShift,
        Key::LAlt => Framework_Key::LeftAlt,
        Key::LSystem => Framework_Key::LeftSuper,
        Key::RControl => Framework_Key::RightControl,
        Key::RShift => Framework_Key::RightShift,
        Key::RAlt => Framework_Key::RightAlt,
        Key::RSystem => Framework_Key::RightSuper,
        Key::Menu => Framework_Key::Menu,
        Key::LBracket => Framework_Key::LeftBracket,
        Key::RBracket => Framework_Key::RightBracket,
        Key::SemiColon => Framework_Key::Semicolon,
        Key::Comma => Framework_Key::Comma,
        Key::Period => Framework_Key::Period,
        Key::Quote => Framework_Key::Apostrophe,
        Key::Slash => Framework_Key::Slash,
        Key::BackSlash => Framework_Key::Backslash,
        Key::Tilde => Framework_Key::GraveAccent,
        Key::Equal => Framework_Key::Equal,
        Key::Dash => Framework_Key::Minus,
        Key::Space => Framework_Key::Space,
        Key::Return => Framework_Key::Enter,
        Key::BackSpace => Framework_Key::Backspace,
        Key::Tab => Framework_Key::Tab,
        Key::PageUp => Framework_Key::PageUp,
        Key::PageDown => Framework_Key::PageDown,
        Key::End => Framework_Key::End,
        Key::Home => Framework_Key::Home,
        Key::Insert => Framework_Key::Insert,
        Key::Delete => Framework_Key::Delete,
        Key::Add => Framework_Key::KpAdd,
        Key::Subtract => Framework_Key::KpSubtract,
        Key::Multiply => Framework_Key::KpMultiply,
        Key::Divide => Framework_Key::KpDivide,
        Key::Left => Framework_Key::Left,
        Key::Right => Framework_Key::Right,
        Key::Up => Framework_Key::Up,
        Key::Down => Framework_Key::Down,
        Key::Numpad0 => Framework_Key::Kp0,
        Key::Numpad1 => Framework_Key::Kp1,
        Key::Numpad2 => Framework_Key::Kp2,
        Key::Numpad3 => Framework_Key::Kp3,
        Key::Numpad4 => Framework_Key::Kp4,
        Key::Numpad5 => Framework_Key::Kp5,
        Key::Numpad6 => Framework_Key::Kp6,
        Key::Numpad7 => Framework_Key::Kp7,
        Key::Numpad8 => Framework_Key::Kp8,
        Key::Numpad9 => Framework_Key::Kp9,
        Key::F1 => Framework_Key::F1,
        Key::F2 => Framework_Key::F2,
        Key::F3 => Framework_Key::F3,
        Key::F4 => Framework_Key::F4,
        Key::F5 => Framework_Key::F5,
        Key::F6 => Framework_Key::F6,
        Key::F7 => Framework_Key::F7,
        Key::F8 => Framework_Key::F8,
        Key::F9 => Framework_Key::F9,
        Key::F10 => Framework_Key::F10,
        Key::F11 => Framework_Key::F11,
        Key::F12 => Framework_Key::F12,
        Key::F13 => Framework_Key::F13,
        Key::F14 => Framework_Key::F14,
        Key::F15 => Framework_Key::F15,
        Key::Pause => Framework_Key::Pause,
    }
}

#[inline(always)]
// @WaitForStable: make this const
pub fn keypressed(code: Key) -> Event {
    Event::Key(
        engine_to_framework_key(code),
        0, // @Incomplete: scancode
        Action::Press,
        glfw::Modifiers::empty(),
    )
}

// @WaitForStable: make this const
#[inline(always)]
pub fn keyreleased(code: Key) -> Event {
    Event::Key(
        engine_to_framework_key(code),
        0, // @Incomplete: scancode
        Action::Release,
        glfw::Modifiers::empty(),
    )
}
