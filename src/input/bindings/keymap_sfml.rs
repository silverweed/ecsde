use sfml::window::Key;

pub(super) fn string_to_key(s: &str) -> Option<Key> {
    match s {
        "A" => Some(Key::A),
        "B" => Some(Key::B),
        "C" => Some(Key::C),
        "D" => Some(Key::D),
        "E" => Some(Key::E),
        "F" => Some(Key::F),
        "G" => Some(Key::G),
        "H" => Some(Key::H),
        "I" => Some(Key::I),
        "J" => Some(Key::J),
        "K" => Some(Key::K),
        "L" => Some(Key::L),
        "M" => Some(Key::M),
        "N" => Some(Key::N),
        "O" => Some(Key::O),
        "P" => Some(Key::P),
        "Q" => Some(Key::Q),
        "R" => Some(Key::R),
        "S" => Some(Key::S),
        "T" => Some(Key::T),
        "U" => Some(Key::U),
        "V" => Some(Key::V),
        "W" => Some(Key::W),
        "X" => Some(Key::X),
        "Y" => Some(Key::Y),
        "Z" => Some(Key::Z),
        "Num0" => Some(Key::Num0),
        "Num1" => Some(Key::Num1),
        "Num2" => Some(Key::Num2),
        "Num3" => Some(Key::Num3),
        "Num4" => Some(Key::Num4),
        "Num5" => Some(Key::Num5),
        "Num6" => Some(Key::Num6),
        "Num7" => Some(Key::Num7),
        "Num8" => Some(Key::Num8),
        "Num9" => Some(Key::Num9),
        "Escape" => Some(Key::Escape),
        "LControl" => Some(Key::LControl),
        "LShift" => Some(Key::LShift),
        "LAlt" => Some(Key::LAlt),
        "LSystem" => Some(Key::LSystem),
        "RControl" => Some(Key::RControl),
        "RShift" => Some(Key::RShift),
        "RAlt" => Some(Key::RAlt),
        "RSystem" => Some(Key::RSystem),
        "Menu" => Some(Key::Menu),
        "LBracket" => Some(Key::LBracket),
        "RBracket" => Some(Key::RBracket),
        "SemiColon" => Some(Key::SemiColon),
        "Comma" => Some(Key::Comma),
        "Period" => Some(Key::Period),
        "Quote" => Some(Key::Quote),
        "Slash" => Some(Key::Slash),
        "BackSlash" => Some(Key::BackSlash),
        "Tilde" => Some(Key::Tilde),
        "Equal" => Some(Key::Equal),
        "Dash" => Some(Key::Dash),
        "Space" => Some(Key::Space),
        "Return" => Some(Key::Return),
        "BackSpace" => Some(Key::BackSpace),
        "Tab" => Some(Key::Tab),
        "PageUp" => Some(Key::PageUp),
        "PageDown" => Some(Key::PageDown),
        "End" => Some(Key::End),
        "Home" => Some(Key::Home),
        "Insert" => Some(Key::Insert),
        "Delete" => Some(Key::Delete),
        "Add" => Some(Key::Add),
        "Subtract" => Some(Key::Subtract),
        "Multiply" => Some(Key::Multiply),
        "Divide" => Some(Key::Divide),
        "Left" => Some(Key::Left),
        "Right" => Some(Key::Right),
        "Up" => Some(Key::Up),
        "Down" => Some(Key::Down),
        "Numpad0" => Some(Key::Numpad0),
        "Numpad1" => Some(Key::Numpad1),
        "Numpad2" => Some(Key::Numpad2),
        "Numpad3" => Some(Key::Numpad3),
        "Numpad4" => Some(Key::Numpad4),
        "Numpad5" => Some(Key::Numpad5),
        "Numpad6" => Some(Key::Numpad6),
        "Numpad7" => Some(Key::Numpad7),
        "Numpad8" => Some(Key::Numpad8),
        "Numpad9" => Some(Key::Numpad9),
        "F1" => Some(Key::F1),
        "F2" => Some(Key::F2),
        "F3" => Some(Key::F3),
        "F4" => Some(Key::F4),
        "F5" => Some(Key::F5),
        "F6" => Some(Key::F6),
        "F7" => Some(Key::F7),
        "F8" => Some(Key::F8),
        "F9" => Some(Key::F9),
        "F10" => Some(Key::F10),
        "F11" => Some(Key::F11),
        "F12" => Some(Key::F12),
        "F13" => Some(Key::F13),
        "F14" => Some(Key::F14),
        "F15" => Some(Key::F15),
        "Pause" => Some(Key::Pause),
        _ => None,
    }
}
